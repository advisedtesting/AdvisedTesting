<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="AdvisedJunit4"><sessioninfo id="Rexs-MacBook-Pro.local-86a00e2c" start="1555201455630" dump="1555201456280"/><sessioninfo id="Rexs-MacBook-Pro.local-fce5663e" start="1555201461631" dump="1555201462343"/><sessioninfo id="Rexs-MacBook-Pro.local-91a7fdc4" start="1555202074974" dump="1555202075667"/><sessioninfo id="Rexs-MacBook-Pro.local-4aed49ec" start="1555202591180" dump="1555202591781"/><group name="AdvisedCore"><package name="org/advisedtesting/core/internal"><class name="org/advisedtesting/core/internal/ProviderAwareObjectFactoryAggregate" sourcefilename="ProviderAwareObjectFactoryAggregate.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/annotation/Annotation;Lorg/advisedtesting/core/ObjectFactory;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllObjects" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/util/Map;" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllObjects" desc="(Ljava/lang/Class;)Ljava/util/Map;" line="78"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgumentsFor" desc="(Ljava/lang/reflect/Method;)[Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArgumentFor" desc="(Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeOnFoundObjectFactory" desc="(Ljava/lang/annotation/Annotation;Ljava/util/function/Function;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="7" covered="34"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map$Entry;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$1" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$2" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$3" desc="(Ljava/lang/Class;Lorg/advisedtesting/core/ObjectFactory;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$4" desc="(Ljava/lang/String;Ljava/lang/Class;Lorg/advisedtesting/core/ObjectFactory;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$5" desc="(Ljava/lang/Class;Lorg/advisedtesting/core/ObjectFactory;)Ljava/util/Map;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$6" desc="(Ljava/lang/String;Ljava/lang/Class;Lorg/advisedtesting/core/ObjectFactory;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$7" desc="(Ljava/lang/Class;Lorg/advisedtesting/core/ObjectFactory;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="163"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="16" covered="25"/><counter type="COMPLEXITY" missed="15" covered="20"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/advisedtesting/core/internal/AdviceAnnotationEvaluator" sourcefilename="AdviceAnnotationEvaluator.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasAdviceClass" desc="(Ljava/lang/annotation/Annotation;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="([Ljava/lang/annotation/Annotation;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstanceIfPresent" desc="(Ljava/lang/annotation/Annotation;)Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameIfPresent" desc="(Ljava/lang/annotation/Annotation;)Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueIfPresent" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="1" covered="44"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="183"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="4" covered="35"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/advisedtesting/core/internal/SimpleObjectFactory" sourcefilename="SimpleObjectFactory.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllObjects" desc="(Ljava/lang/Class;)Ljava/util/Map;" line="71"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Ljava/lang/Class;Ljava/util/Map$Entry;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$1" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$2" desc="(Ljava/util/Map$Entry;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$3" desc="(Ljava/lang/Class;Ljava/util/Map;Ljava/util/Map$Entry;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/advisedtesting/core/internal/ExceptionEvaluator" sourcefilename="ExceptionEvaluator.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertExceptionIfPossible" desc="(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Exception;" line="36"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/advisedtesting/core/internal/TestContext" sourcefilename="TestContext.java"><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdviceFor" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/ClassLoader;)Lorg/aopalliance/intercept/MethodInterceptor;" line="78"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdviceAnnotation" desc="(Ljava/lang/annotation/Annotation;)Z" line="112"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractAdviceClass" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/ClassLoader;)Ljava/lang/Class;" line="131"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callZeroArguementConstructor" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/aopalliance/intercept/MethodInterceptor;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="158"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="38"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/advisedtesting/core/internal/TestContext$1" sourcefilename="TestContext.java"><method name="&lt;init&gt;" desc="(Lorg/advisedtesting/core/internal/TestContext;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExceptionEvaluator.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TestContext.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="1" cb="3"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="2" ci="4" mb="1" cb="1"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="168"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AdviceAnnotationEvaluator.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="40" mi="0" ci="5" mb="1" cb="1"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="18" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="2"/><line nr="64" mi="0" ci="14" mb="0" cb="0"/><line nr="65" mi="1" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="1" cb="1"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="1" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="1" cb="1"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="18" mb="0" cb="2"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="1" cb="3"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="183"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="4" covered="35"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProviderAwareObjectFactoryAggregate.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="2"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="23" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="1" cb="3"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="11" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="4" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="4" cb="0"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="13" mb="0" cb="2"/><line nr="115" mi="0" ci="8" mb="1" cb="1"/><line nr="116" mi="7" ci="2" mb="3" cb="1"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="163"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="16" covered="25"/><counter type="COMPLEXITY" missed="15" covered="20"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleObjectFactory.java"><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="113" covered="659"/><counter type="BRANCH" missed="27" covered="65"/><counter type="LINE" missed="23" covered="134"/><counter type="COMPLEXITY" missed="25" covered="68"/><counter type="METHOD" missed="5" covered="42"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/advisedtesting/core"><class name="org/advisedtesting/core/ConstraintException" sourcefilename="ConstraintException.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/advisedtesting/core/ObjectFactory" sourcefilename="ObjectFactory.java"/><class name="org/advisedtesting/core/ContextAwareMethodInvocation" sourcefilename="ContextAwareMethodInvocation.java"/><sourcefile name="ContextAwareMethodInvocation.java"/><sourcefile name="ConstraintException.java"><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectFactory.java"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><counter type="INSTRUCTION" missed="136" covered="659"/><counter type="BRANCH" missed="27" covered="65"/><counter type="LINE" missed="33" covered="134"/><counter type="COMPLEXITY" missed="30" covered="68"/><counter type="METHOD" missed="10" covered="42"/><counter type="CLASS" missed="1" covered="6"/></group><counter type="INSTRUCTION" missed="136" covered="659"/><counter type="BRANCH" missed="27" covered="65"/><counter type="LINE" missed="33" covered="134"/><counter type="COMPLEXITY" missed="30" covered="68"/><counter type="METHOD" missed="10" covered="42"/><counter type="CLASS" missed="1" covered="6"/></report>